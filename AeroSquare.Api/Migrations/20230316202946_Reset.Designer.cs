// <auto-generated />
using System;
using AeroSquare.Repository.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AeroSquare.Api.Migrations
{
    [DbContext(typeof(FlightsDbContextEF))]
    [Migration("20230316202946_Reset")]
    partial class Reset
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AeroSquare.Entities.Airplane", b =>
                {
                    b.Property<int>("AirplaneId")
                        .HasColumnType("int");

                    b.Property<short>("Capacity")
                        .HasMaxLength(32767)
                        .HasColumnType("smallint");

                    b.Property<short>("FlightCrew")
                        .HasMaxLength(32767)
                        .HasColumnType("smallint");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("AirplaneId");

                    b.ToTable("Airplane", (string)null);
                });

            modelBuilder.Entity("AeroSquare.Entities.City", b =>
                {
                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("CityId");

                    b.ToTable("City", (string)null);
                });

            modelBuilder.Entity("AeroSquare.Entities.Destination", b =>
                {
                    b.Property<int>("DestinationId")
                        .HasColumnType("int");

                    b.Property<string>("CityId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DestinationId");

                    b.ToTable("Destination", (string)null);
                });

            modelBuilder.Entity("AeroSquare.Entities.Flight", b =>
                {
                    b.Property<int>("FlightId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FlightId"));

                    b.Property<DateTime>("ArrivalTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DepartureTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("DestinationId")
                        .HasColumnType("int");

                    b.Property<string>("FlightNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ListPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("OriginId")
                        .HasColumnType("int");

                    b.HasKey("FlightId");

                    b.ToTable("Flight", (string)null);
                });

            modelBuilder.Entity("AeroSquare.Entities.FlightDays", b =>
                {
                    b.Property<int>("FlightDayId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FlightDayId"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FlightDayId");

                    b.ToTable("FlightDays", (string)null);
                });

            modelBuilder.Entity("AeroSquare.Entities.Origin", b =>
                {
                    b.Property<int>("OriginId")
                        .HasColumnType("int");

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.HasKey("OriginId");

                    b.ToTable("Origin", (string)null);
                });

            modelBuilder.Entity("FlightFlightDays", b =>
                {
                    b.Property<int>("FlightDaysFlightDayId")
                        .HasColumnType("int");

                    b.Property<int>("FlightsFlightId")
                        .HasColumnType("int");

                    b.HasKey("FlightDaysFlightDayId", "FlightsFlightId");

                    b.HasIndex("FlightsFlightId");

                    b.ToTable("FlightFlightDays");
                });

            modelBuilder.Entity("AeroSquare.Entities.Airplane", b =>
                {
                    b.HasOne("AeroSquare.Entities.Flight", "Flight")
                        .WithOne("Airplane")
                        .HasForeignKey("AeroSquare.Entities.Airplane", "AirplaneId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Flight");
                });

            modelBuilder.Entity("AeroSquare.Entities.City", b =>
                {
                    b.HasOne("AeroSquare.Entities.Destination", "Destination")
                        .WithOne("City")
                        .HasForeignKey("AeroSquare.Entities.City", "CityId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("AeroSquare.Entities.Origin", "Origin")
                        .WithOne("City")
                        .HasForeignKey("AeroSquare.Entities.City", "CityId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Destination");

                    b.Navigation("Origin");
                });

            modelBuilder.Entity("AeroSquare.Entities.Destination", b =>
                {
                    b.HasOne("AeroSquare.Entities.Flight", "Flight")
                        .WithOne("Destination")
                        .HasForeignKey("AeroSquare.Entities.Destination", "DestinationId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Flight");
                });

            modelBuilder.Entity("AeroSquare.Entities.Origin", b =>
                {
                    b.HasOne("AeroSquare.Entities.Flight", "Flight")
                        .WithOne("Origin")
                        .HasForeignKey("AeroSquare.Entities.Origin", "OriginId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Flight");
                });

            modelBuilder.Entity("FlightFlightDays", b =>
                {
                    b.HasOne("AeroSquare.Entities.FlightDays", null)
                        .WithMany()
                        .HasForeignKey("FlightDaysFlightDayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AeroSquare.Entities.Flight", null)
                        .WithMany()
                        .HasForeignKey("FlightsFlightId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AeroSquare.Entities.Destination", b =>
                {
                    b.Navigation("City");
                });

            modelBuilder.Entity("AeroSquare.Entities.Flight", b =>
                {
                    b.Navigation("Airplane");

                    b.Navigation("Destination");

                    b.Navigation("Origin");
                });

            modelBuilder.Entity("AeroSquare.Entities.Origin", b =>
                {
                    b.Navigation("City");
                });
#pragma warning restore 612, 618
        }
    }
}
